% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract.R
\name{st_extract}
\alias{st_extract}
\alias{st_extract.stars}
\title{Extract cell values at point locations}
\usage{
st_extract(x, ...)

\method{st_extract}{stars}(
  x,
  pts,
  ...,
  bilinear = FALSE,
  time_column = attr(pts, "time_column") \%||\% attr(pts, "time_col"),
  interpolate_time = bilinear
)
}
\arguments{
\item{x}{object of class \code{stars} or \code{stars_proxy}}

\item{...}{ignored}

\item{pts}{object of class \code{sf} or \code{sfc} with POINT geometries}

\item{bilinear}{logical; use bilinear interpolation rather than nearest neighbour?}

\item{time_column}{character or integer; name or index of a column with time or date values that will be matched to values of the dimension "time" in \code{x}, after which this dimension is reduced. This is useful to extract data cube values along a trajectory; see https://github.com/r-spatial/stars/issues/352 .}

\item{interpolate_time}{logical; should time be interpolated? if FALSE, time instances are matched using the coinciding or the last preceding time in the data cube.}
}
\value{
if \code{x} has more dimensions than only x and y (raster), an 
object of class \code{stars} with POINT geometries replacing x and y raster
dimensions; otherwise an object of \code{sf} with extracted values.
}
\description{
Extract cell values at point locations
}
\details{
points outside the raster are returned as \code{NA} values.
}
\examples{
tif = system.file("tif/L7_ETMs.tif", package = "stars")
r = read_stars(tif)
pnt = st_sample(st_as_sfc(st_bbox(r)), 10)
st_extract(r, pnt)
st_extract(r, pnt) \%>\% st_as_sf()
st_extract(r[,,,1], pnt)
}
